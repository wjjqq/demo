<?xml version="1.0" encoding="UTF-8"?>
<configuration info="true">
    <property name="LOG_DIR" value="/logs/dubbo-demo"/>
    <property name="LOG_LEVEL" value="INFO"/>

    <!--输出到控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="dubboDemoFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/dubboDemo.log</file>

        <!--日志滚动策略 有：
        TimeBasedRollingPolicy：基于时间滚动策略
        SizeAndTimeBasedRollingPolicy：基于大小和时间的滚动策略，对时间滚动策略的一个补充
        FixedWindowRollingPolicy：基于固定窗口的滚动策略
        -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_DIR}/dubboDemo.log.%d{yyyy-MM-dd}</FileNamePattern>
            <!--日志保存多少天-->
            <!--<maxHistory>30</maxHistory>-->
        </rollingPolicy>

        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>${LOG_LEVEL}</level>
        </filter>
    </appender>

    <appender name="dubboDemoBizFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/dubboDemoBiz.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_DIR}/dubboDemoBiz.log.%d{yyyy-MM-dd}</FileNamePattern>
        </rollingPolicy>

        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>${LOG_LEVEL}</level>
        </filter>
    </appender>


    <appender name="dubboDemoPackageFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/dubboDemoPac.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_DIR}/dubboDemoPac.log.%d{yyyy-MM-dd}</FileNamePattern>
        </rollingPolicy>

        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>${LOG_LEVEL}</level>
        </filter>
    </appender>


    <!--指定包输出日志， name指定的包都打印到mytoolPackageFile该配置下的日志文件-->
    <logger name="com.wjj.report.service" level="${LOG_LEVEL}" additivity="false">
        <appender-ref ref="dubboDemoPackageFile" />
    </logger>

    <!--根据name获取日志    Logger biz_log = LoggerFactory.getLogger("bizLogger");-->
    <!--如果没有设置 additivity="false" ,就会导致一条日志在控制台输出两次的情况-->
    <!--additivity表示要不要使用rootLogger配置的appender进行输出-->
    <logger name="bizLogger" level="${LOG_LEVEL}" additivity="false">
        <appender-ref ref="dubboDemoBizFile" />
    </logger>

    <root level="${LOG_LEVEL}">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="dubboDemoFile" />
    </root>
</configuration>